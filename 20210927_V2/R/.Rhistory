library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
detach("package:dplyr", unload = TRUE)
library(tidyverse)
library(haven)
# Daten einlesen und filtern
df_votes = read_dta("aggregat2.dta")
df_votes = df_votes %>% filter(id > 333) # ab Ende 1985
library(dplyr)
df_votes = df_votes %>% filter(id > 333) # ab Ende 1985
# Streudiagram
ggplot(df_votes, aes(x = nationalrat, y = acceptpo)) +
geom_point() +
scale_x_continuous(limits = c(0, 100)) +
scale_y_continuous(limits = c(0, 100)) +
theme_minimal() +
xlab("Schlussabstimmung Nationalrat (Verhältnis Ja/Nein-Stimmen ohne Enthaltungen)") +
ylab("Anteil Ja-Stimmen an der Urne")
# lineare Regressionslinie hinzufügen
# ggplot(df_votes, aes(x = nationalrat, y = acceptpo)) +
ggplot(df_votes, aes(x = nationalrat, y = acceptpo)) +
geom_point() +
scale_x_continuous(limits = c(0, 100)) +
scale_y_continuous(limits = c(0, 100)) +
theme_minimal() +
xlab("Schlussabstimmung Nationalrat (Verhältnis Ja/Nein-Stimmen ohne Enthaltungen)") +
ylab("Anteil Ja-Stimmen an der Urne") +
geom_smooth(method = "lm", se = FALSE)
# lineare Regressionslinie hinzufügen
# ggplot(df_votes, aes(x = nationalrat, y = acceptpo)) +
ggplot(df_votes, aes(x = nationalrat, y = acceptpo)) +
geom_point() +
scale_x_continuous(limits = c(0, 100)) +
scale_y_continuous(limits = c(0, 100)) +
theme_classic() +
xlab("Schlussabstimmung Nationalrat (Verhältnis Ja/Nein-Stimmen ohne Enthaltungen)") +
ylab("Anteil Ja-Stimmen an der Urne") +
geom_smooth(method = "lm", se = FALSE)
# lineare Regressionslinie hinzufügen
# ggplot(df_votes, aes(x = nationalrat, y = acceptpo)) +
ggplot(df_votes, aes(x = nationalrat, y = acceptpo)) +
geom_point() +
scale_x_continuous(limits = c(0, 100)) +
scale_y_continuous(limits = c(0, 100)) +
theme_minimal() +
xlab("Schlussabstimmung Nationalrat (Verhältnis Ja/Nein-Stimmen ohne Enthaltungen)") +
ylab("Anteil Ja-Stimmen an der Urne") +
geom_smooth(method = "lm", se = FALSE)
# Streudiagram
ggplot(df_votes, aes(x = srf2ja, y = acceptpo)) +
geom_point() +
scale_x_continuous(limits = c(0, 100)) +
scale_y_continuous(limits = c(0, 100)) +
theme_minimal() +
xlab("2. Welle Umfrage SRF") +
ylab("Anteil Ja-Stimmen an der Urne")
geom_smooth(method="lm", se = FALSE)
# Streudiagram
ggplot(df_votes, aes(x = srf2ja, y = acceptpo)) +
geom_point() +
scale_x_continuous(limits = c(0, 100)) +
scale_y_continuous(limits = c(0, 100)) +
theme_minimal() +
xlab("2. Welle Umfrage SRF") +
ylab("Anteil Ja-Stimmen an der Urne") +
geom_smooth(method="lm", se = FALSE)
source('~/.active-rstudio-document')
rm(list = ls())
library(tidyverse)
library(haven)
df_votes = read_dta("aggregat2.dta")
df_votes = df_votes %>% filter(id > 333) # ab Ende 1985
ggplot(df_votes, aes(x = srf2ja, y = acceptpo)) +
geom_point() +
scale_x_continuous(limits = c(0, 100)) +
scale_y_continuous(limits = c(0, 100)) +
theme_minimal() +
xlab("2. Welle Umfrage SRF") +
ylab("Anteil Ja-Stimmen an der Urne") +
geom_smooth(method="lm", se = FALSE)
## Übung 2
read.csv("freedom_house_index.csv")
## Übung 2
df_FHindex <- read.csv("freedom_house_index.csv")
head(df_FHindex)
View(df_FHindex)
View(df_FHindex)
ggplot(df_votes, aes(x = GDPPC, y = Democratic_Score)) +
geom_point() +
scale_x_continuous(limits = c(0, 100)) +
scale_y_continuous(limits = c(0, 100)) +
theme_minimal() +
xlab("BIP / Kopf") +
ylab("Demokratisierungsgrad") +
geom_smooth(method="lm", se = FALSE)
ggplot(df_FHindex, aes(x = GDPPC, y = Democratic_Score)) +
geom_point() +
scale_x_continuous(limits = c(0, 100)) +
scale_y_continuous(limits = c(0, 100)) +
theme_minimal() +
xlab("BIP / Kopf") +
ylab("Demokratisierungsgrad") +
geom_smooth(method="lm", se = FALSE)
ggplot(df_FHindex, aes(x = GDPPC, y = Democratic_Score)) +
geom_point() +
scale_y_continuous(limits = c(0, 100)) +
theme_minimal() +
xlab("BIP / Kopf") +
ylab("Demokratisierungsgrad") +
geom_smooth(method="lm", se = FALSE)
getwd()
devtools::install_github("benjaminschlegel/schlegel")
install.packages("devtools")
devtools::install_github("benjaminschlegel/schlegel")
lm()
View(df_votes)
View(df_votes)
View(df_votes)
colnames(df_votes)
## Übung 1
df_votes = read_dta("aggregat2.dta")
library(haven)
## Übung 1
df_votes = read_dta("aggregat2.dta")
df_votes = df_votes %>% filter(id > 333) # ab Ende 1985
library(tidyverse)
df_votes = df_votes %>% filter(id > 333) # ab Ende 1985
detach("package:dplyr", unload = TRUE)
library(tidyverse)
library(haven)
## Übung 1
df_votes = read_dta("aggregat2.dta")
df_votes = df_votes %>% filter(id > 333) # ab Ende 1985
View(df_votes)
df_votes = df_votes %>% filter(id > 333) # ab Ende 1985
ggplot(df_votes, aes(x = srf2ja, y = acceptpo)) +
geom_point() +
scale_x_continuous(limits = c(0, 100)) +
scale_y_continuous(limits = c(0, 100)) +
theme_minimal() +
xlab("2. Welle Umfrage SRF") +
ylab("Anteil Ja-Stimmen an der Urne") +
geom_smooth(method="lm", se = FALSE)
ggplot(df_FHindex, aes(x = GDPPC, y = Democratic_Score)) +
geom_point() +
scale_x_continuous(limits = c(0, 100)) +
scale_y_continuous(limits = c(0, 100)) +
theme_minimal() +
xlab("BIP / Kopf") +
ylab("Demokratisierungsgrad") +
geom_smooth(method="lm", se = FALSE)
ggplot(df_FHindex, aes(x = GDPPC, y = Democratic_Score)) +
geom_point() +
scale_y_continuous(limits = c(0, 100)) +
theme_minimal() +
xlab("BIP / Kopf") +
ylab("Demokratisierungsgrad") +
geom_smooth(method="lm", se = FALSE)
## Übung 1
df_votes = read_dta("aggregat2.dta")
df_votes = df_votes %>% filter(id > 333) # ab Ende 1985
library(dplyr)
df_votes = df_votes %>% dplyr::filter(id > 333) # ab Ende 1985
View(df_votes)
# Daten einlesen und filtern
df_votes = read_dta("agcolgregat2.dta")
# Daten einlesen und filtern
df_votes = read_dta("agcolgregat2.dta")
# Daten einlesen und filtern
df_votes = read_dta("aggregat2.dta")
df_votes = df_votes %>% dplyr::filter(id > 333) # ab Ende 1985
theme_minimal() +
ggplot(df_votes, aes(x = srf2ja, y = acceptpo)) +
geom_point() +
scale_x_continuous(limits = c(0, 100)) +
scale_y_continuous(limits = c(0, 100)) +
theme_minimal() +
xlab("2. Welle Umfrage SRF") +
ylab("Anteil Ja-Stimmen an der Urne") +
geom_smooth(method="lm", se = FALSE)
ggplot(df_votes, aes(x = srf2ja, y = acceptpo)) +
geom_point() +
scale_x_continuous(limits = c(0, 100)) +
scale_y_continuous(limits = c(0, 100)) +
theme_minimal() +
xlab("2. Welle Umfrage SRF") +
ylab("Anteil Ja-Stimmen an der Urne") +
geom_smooth(method="lm", se = FALSE)
ggplot(df_FHindex, aes(x = GDPPC, y = Democratic_Score)) +
geom_point() +
scale_y_continuous(limits = c(0, 100)) +
theme_minimal() +
xlab("BIP / Kopf") +
ylab("Demokratisierungsgrad") +
geom_smooth(method="lm", se = FALSE)
ggplot(df_FHindex, aes(x = GDPPC, y = Democratic_Score)) +
geom_point() +
scale_x_continuous(limits = c(0, 50000)) +
scale_y_continuous(limits = c(0, 100)) +
theme_minimal() +
xlab("BIP / Kopf") +
ylab("Demokratisierungsgrad") +
geom_smooth(method="lm", se = FALSE)
ggplot(df_FHindex, aes(x = GDPPC, y = Democratic_Score)) +
geom_point() +
scale_x_continuous(limits = c(0, 50000)) +
scale_y_continuous(limits = c(0, 100)) +
theme_minimal() +
xlab("BIP / Kopf") +
ylab("Demokratisierungsgrad") +
geom_smooth(method="lm", se = FALSE)
library(tidyverse)
library(haven)
## Übung 1
df_votes = read_dta("aggregat2.dta")
df_votes = df_votes %>% filter(id > 333) # ab Ende 1985
## Übung 2
df_FHindex <- read.csv("freedom_house_index.csv")
ggplot(df_FHindex, aes(x = GDPPC, y = Democratic_Score)) +
geom_point() +
scale_x_continuous(limits = c(0, 50000)) +
scale_y_continuous(limits = c(0, 100)) +
theme_minimal() +
xlab("BIP / Kopf") +
ylab("Demokratisierungsgrad") +
geom_smooth(method="lm", se = FALSE)
ggplot(df_votes, aes(x = srf2ja, y = acceptpo)) +
geom_point() +
scale_x_continuous(limits = c(0, 100)) +
scale_y_continuous(limits = c(0, 100)) +
theme_minimal() +
xlab("2. Welle Umfrage SRF") +
ylab("Anteil Ja-Stimmen an der Urne") +
geom_smooth(method="lm", se = FALSE)
library(tidyverse)
library(haven)
## Übung 1
df_votes = read_dta("aggregat2.dta")
df_votes = df_votes %>% filter(id > 333) # ab Ende 1985
ggplot(df_votes, aes(x = srf2ja, y = acceptpo)) +
geom_point() +
scale_x_continuous(limits = c(0, 100)) +
scale_y_continuous(limits = c(0, 100)) +
theme_minimal() +
xlab("2. Welle Umfrage SRF") +
ylab("Anteil Ja-Stimmen an der Urne") +
geom_smooth(method="lm", se = FALSE)
model <- lm(srf2ja ~ acceptpo, data = df_votes)
model
model <- lm(acceptpo ~ srf2ja, data = df_votes)
model
ggplot(df_votes, aes(x = acceptpo, y = srf2ja)) +
geom_point() +
scale_x_continuous(limits = c(0, 100)) +
scale_y_continuous(limits = c(0, 100)) +
theme_minimal() +
xlab("2. Welle Umfrage SRF") +
ylab("Anteil Ja-Stimmen an der Urne") +
geom_smooth(method="lm", se = FALSE)
ggplot(df_votes, aes(x = acceptpo, y = srf2ja)) +
geom_point() +
scale_x_continuous(limits = c(0, 100)) +
scale_y_continuous(limits = c(0, 100)) +
theme_minimal() +
xlab("Anteil Ja-Stimmen an der Urne") +
ylab("2. Welle Umfrage SRF") +
geom_smooth(method="lm", se = FALSE)
model <- lm(srf2ja ~ acceptpo, data = df_votes)
model
model = lm(acceptpo ~ nationalrat, data = df_votes)
model
model <- lm(srf2ja ~ acceptpo, data = df_votes)
model
model1 = lm(acceptpo ~ nationalrat, data = df_votes)
summary(model1)
model <- lm(acceptpo ~ srf2ja, data = df_votes)
model
ggplot(df_votes, aes(x = srf2ja, y = acceptpo)) +
geom_point() +
scale_x_continuous(limits = c(0, 100)) +
scale_y_continuous(limits = c(0, 100)) +
theme_minimal() +
xlab("2. Welle Umfrage SRF") +
ylab("Anteil Ja-Stimmen an der Urne") +
geom_smooth(method="lm", se = FALSE)
ggplot(df_votes, aes(x = srf2ja, y = acceptpo)) +
geom_point() +
scale_x_continuous(limits = c(0, 100)) +
scale_y_continuous(limits = c(0, 100)) +
theme_minimal() +
xlab("2. Welle Umfrage SRF") +
ylab("Anteil Ja-Stimmen an der Urne") +
geom_smooth(method="lm", se = TRUE)
ggplot(df_votes, aes(x = srf2ja, y = acceptpo)) +
geom_point() +
scale_x_continuous(limits = c(0, 100)) +
scale_y_continuous(limits = c(0, 100)) +
theme_minimal() +
xlab("2. Welle Umfrage SRF") +
ylab("Anteil Ja-Stimmen an der Urne") +
geom_smooth(method="lm", se = FALSE)
model1 = lm(acceptpo ~ nationalrat, data = df_votes)
summary(model1)
summary(model)
# für den Datensatz:
install.packages("devtools")
install.packages("devtools")
devtools::install_github("benjaminschlegel/schlegel")
# mit Gewicht
model2 = lm(lr_self ~ age, data = schlegel::selects2015,
weights = weight_total)
summary(model2)
ggplot(schlegel::selects2015, aes(x = age, y = lr_self)) +
geom_point() +
scale_x_continuous(limits = c(0, 100)) +
scale_y_continuous(limits = c(0, 100)) +
theme_minimal() +
xlab("Alter") +
ylab("Einordnung auf der Links/Rechts Achse") +
geom_smooth(method="lm", se = FALSE)
view(schlegel::selects2015)
ggplot(schlegel::selects2015, aes(x = age, y = lr_self)) +
geom_point() +
scale_x_continuous(limits = c(0, 100)) +
scale_y_continuous(limits = c(0, 10)) +
theme_minimal() +
xlab("Alter") +
ylab("Einordnung auf der Links/Rechts Achse") +
geom_smooth(method="lm", se = FALSE)
# mit Gewicht
model2 = lm(lr_self ~ age, data = schlegel::selects2015,
weights = weight_total)
summary(model2)
# mit Gewicht
model2 = lm(lr_self ~ participation, data = schlegel::selects2015,
weights = weight_total)
summary(model2)
summary(model)
model <- lm(acceptpo ~ srf2ja, data = df_votes)
model
summary(model)
model <- lm(acceptpo ~ srf2ja, data = df_votes)
model
summary(model)
model <- lm(acceptpo ~ srf2ja, data = df_votes)
model
summary(model)
# Übung 15
view df_FHindex
# Übung 15
view(df_FHindex)
# Übung 15
view(df_FHindex)
# Übung 15
model_GDP-Demo <- lm(GDPPC ~ Democratic_Score, data = df_FHindex)
# Übung 15
model_GDP_Demo <- lm(GDPPC ~ Democratic_Score, data = df_FHindex)
summary(model_GDP_Demo)
ggplot(df_FHindex, aes(x = GDPPC, y = Democratic_Score)) +
geom_point() +
scale_x_continuous(limits = c(0, 50000)) +
scale_y_continuous(limits = c(0, 100)) +
theme_minimal() +
xlab("BIP / Kopf") +
ylab("Demokratisierungsgrad") +
geom_smooth(method="lm", se = FALSE)
ggplot(df_FHindex, aes(x = Democratic_Score, y = GDPPC)) +
geom_point() +
scale_x_continuous(limits = c(0, 50000)) +
scale_y_continuous(limits = c(0, 100)) +
theme_minimal() +
xlab("Demokratisierungsgrad") +
ylab("BIP / Kopf") +
geom_smooth(method="lm", se = FALSE)
ggplot(df_FHindex, aes(x = Democratic_Score, y = GDPPC)) +
geom_point() +
scale_x_continuous(limits = c(0, 100)) +
scale_y_continuous(limits = c(0, 50000)) +
theme_minimal() +
xlab("Demokratisierungsgrad") +
ylab("BIP / Kopf") +
geom_smooth(method="lm", se = FALSE)
summary(model_GDP_Demo)
beta = coef(model_GDP_Demo)
se = sqrt(diag(vcov(model_GDP_Demo)))
model_GDP_Demo <- lm(GDPPC ~ Democratic_Score, data = df_FHindex)
beta = coef(model_GDP_Demo)
se = sqrt(diag(vcov(model_GDP_Demo)))
lower = beta + se * qt(0.025, summary(model_GDP_Demo)$df[2])
upper = beta + se * qt(0.025, summary(model_GDP_Demo)$df[2], lower.tail = FALSE)
cbind(lower, beta, upper)
summary(model_GDP_Demo)
cbind(lower, beta, upper)
getwd()
df_freedom <- read.csv("freedom_house_index.csv")
head(df_freedom)
